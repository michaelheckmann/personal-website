---
import { $lang } from "@/i18n/translation";
import {
  getPostIdFromPath,
  isBlogPost,
  removeLocaleFromPath,
} from "@/lib/routing";
import { getCollection } from "astro:content";
import Section from "../ui/section.astro";

const text = $lang.value === "en" ? "Deutsch" : "English";
const reversedLang = $lang.value === "en" ? "de" : "en";
let href = "";

// Check if current URL is a blog post
if (isBlogPost(Astro.url.pathname)) {
  // Get all blog posts from the content collection
  const allBlogPosts = await getCollection("blog");

  // Extract the unique post ID from the current URL
  const currentPostId = getPostIdFromPath(Astro.url.pathname);

  // Find the current blog post object by its ID
  const currentLanguagePost = allBlogPosts.find(
    ({ id }) => id === currentPostId,
  );

  // Find the translated version of the post by:
  // 1. Checking if post ID starts with target language (en/de)
  // 2. Matching the reference ID that connects translations
  const translatedPost = allBlogPosts.find(
    (post) =>
      post.id.startsWith(reversedLang) &&
      post.data.reference === currentLanguagePost?.data.reference,
  );

  // Error if no translation exists
  if (!translatedPost) {
    throw new Error(`!!Translation not found for ${Astro.url.pathname}`);
  }

  // Construct URL for the translated post
  // Format: /{language}/blog/{post-slug}
  href = `/${reversedLang}/blog/${removeLocaleFromPath(translatedPost?.id)}`;
} else {
  const originalPathname = Astro.url.pathname;
  href = originalPathname.replace(/\/de|\/en/, `/${reversedLang}`);
}
---

<Section
  _title="lang-switch"
  class="absolute top-0 left-1/2 -translate-x-1/2 w-full flex justify-end pt-4 px-4"
>
  <a
    href={href}
    class:list={[
      "text-sm text-zinc-700 font-mono px-2 py-1 rounded",
      "transition-colors duration-300 hover:text-zinc-500",
      "outline-none focus-visible:ring-1 ring-zinc-200 focus-visible:text-zinc-200",
    ]}
  >
    {text}
  </a>
</Section>
